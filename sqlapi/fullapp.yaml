apiVersion: v1
kind: Namespace
metadata:
  name: sqlapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: api
  name: api
  namespace:  sqlapi
spec:
  replicas: 1
  selector:
    matchLabels:
      run: api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: api
    spec:
      containers:
      - image: erjosito/sqlapi:1.0
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: SQL_SERVER_FQDN
          valueFrom:
            configMapKeyRef:
              name: sqlconfig
              key: sql_fqdn
        - name: SQL_SERVER_USERNAME
          valueFrom:
            configMapKeyRef:
              name: sqlconfig
              key: sql_user
        - name: SQL_ENGINE
          valueFrom:
            configMapKeyRef:
              name: sqlconfig
              key: sql_engine
        - name: SQL_SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sqlsecret
              key: sql_password
        livenessProbe:
          httpGet:
            path: /api/healthcheck
            port: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "125m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace:  sqlapi
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    run: api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sqlconfig
  namespace:  sqlapi
data:
  sql_fqdn: "postgres1138.postgres.database.azure.com"
  sql_user: "jose"
  sql_engine: "postgres"
---
apiVersion: v1
kind: Secret
metadata:
  name: sqlsecret
data:
  sql_password: TWljcm9zb2Z0MTIzIQo=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace:  sqlapi
  labels:
    run: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      run: web
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: web
    spec:
      containers:
      - image: erjosito/web:1.0
        imagePullPolicy: Always
        name: web
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: API_URL
          value: "http://api:8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "125m"
          limits:
            memory: "128Mi"
            cpu: "500m"
          restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace:  sqlapi
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    run: web
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
  selector:
    run: api
